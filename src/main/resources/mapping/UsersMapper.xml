<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.email.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.example.email.entity.Users">
    <result column="USER" jdbcType="CHAR" property="user" />
    <result column="CURRENT_CONNECTIONS" jdbcType="BIGINT" property="currentConnections" />
    <result column="TOTAL_CONNECTIONS" jdbcType="BIGINT" property="totalConnections" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USER, CURRENT_CONNECTIONS, TOTAL_CONNECTIONS
  </sql>
  <select id="selectByExample" parameterType="com.example.email.entity.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.email.entity.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.email.entity.Users">
    insert into users (USER, CURRENT_CONNECTIONS, TOTAL_CONNECTIONS
      )
    values (#{user,jdbcType=CHAR}, #{currentConnections,jdbcType=BIGINT}, #{totalConnections,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.email.entity.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user != null">
        USER,
      </if>
      <if test="currentConnections != null">
        CURRENT_CONNECTIONS,
      </if>
      <if test="totalConnections != null">
        TOTAL_CONNECTIONS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user != null">
        #{user,jdbcType=CHAR},
      </if>
      <if test="currentConnections != null">
        #{currentConnections,jdbcType=BIGINT},
      </if>
      <if test="totalConnections != null">
        #{totalConnections,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.email.entity.UsersExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.user != null">
        USER = #{record.user,jdbcType=CHAR},
      </if>
      <if test="record.currentConnections != null">
        CURRENT_CONNECTIONS = #{record.currentConnections,jdbcType=BIGINT},
      </if>
      <if test="record.totalConnections != null">
        TOTAL_CONNECTIONS = #{record.totalConnections,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set USER = #{record.user,jdbcType=CHAR},
      CURRENT_CONNECTIONS = #{record.currentConnections,jdbcType=BIGINT},
      TOTAL_CONNECTIONS = #{record.totalConnections,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.example.email.entity.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.example.email.entity.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <resultMap id="BaseResultMap" type="com.example.email.entity.Users">
    <id column="username" jdbcType="VARCHAR" property="username" />
    <result column="pwdHash" jdbcType="VARCHAR" property="pwdhash" />
    <result column="pwdAlgorithm" jdbcType="VARCHAR" property="pwdalgorithm" />
    <result column="useForwarding" jdbcType="SMALLINT" property="useforwarding" />
    <result column="forwardDestination" jdbcType="VARCHAR" property="forwarddestination" />
    <result column="useAlias" jdbcType="SMALLINT" property="usealias" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    username, pwdHash, pwdAlgorithm, useForwarding, forwardDestination, useAlias, alias
  </sql>
  <select id="selectByExample" parameterType="com.example.email.entity.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from users
    where username = #{username,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.email.entity.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.email.entity.Users">
    insert into users (username, pwdHash, pwdAlgorithm, 
      useForwarding, forwardDestination, useAlias, 
      alias)
    values (#{username,jdbcType=VARCHAR}, #{pwdhash,jdbcType=VARCHAR}, #{pwdalgorithm,jdbcType=VARCHAR}, 
      #{useforwarding,jdbcType=SMALLINT}, #{forwarddestination,jdbcType=VARCHAR}, #{usealias,jdbcType=SMALLINT}, 
      #{alias,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.email.entity.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="pwdhash != null">
        pwdHash,
      </if>
      <if test="pwdalgorithm != null">
        pwdAlgorithm,
      </if>
      <if test="useforwarding != null">
        useForwarding,
      </if>
      <if test="forwarddestination != null">
        forwardDestination,
      </if>
      <if test="usealias != null">
        useAlias,
      </if>
      <if test="alias != null">
        alias,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="pwdhash != null">
        #{pwdhash,jdbcType=VARCHAR},
      </if>
      <if test="pwdalgorithm != null">
        #{pwdalgorithm,jdbcType=VARCHAR},
      </if>
      <if test="useforwarding != null">
        #{useforwarding,jdbcType=SMALLINT},
      </if>
      <if test="forwarddestination != null">
        #{forwarddestination,jdbcType=VARCHAR},
      </if>
      <if test="usealias != null">
        #{usealias,jdbcType=SMALLINT},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.email.entity.UsersExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.pwdhash != null">
        pwdHash = #{record.pwdhash,jdbcType=VARCHAR},
      </if>
      <if test="record.pwdalgorithm != null">
        pwdAlgorithm = #{record.pwdalgorithm,jdbcType=VARCHAR},
      </if>
      <if test="record.useforwarding != null">
        useForwarding = #{record.useforwarding,jdbcType=SMALLINT},
      </if>
      <if test="record.forwarddestination != null">
        forwardDestination = #{record.forwarddestination,jdbcType=VARCHAR},
      </if>
      <if test="record.usealias != null">
        useAlias = #{record.usealias,jdbcType=SMALLINT},
      </if>
      <if test="record.alias != null">
        alias = #{record.alias,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set username = #{record.username,jdbcType=VARCHAR},
      pwdHash = #{record.pwdhash,jdbcType=VARCHAR},
      pwdAlgorithm = #{record.pwdalgorithm,jdbcType=VARCHAR},
      useForwarding = #{record.useforwarding,jdbcType=SMALLINT},
      forwardDestination = #{record.forwarddestination,jdbcType=VARCHAR},
      useAlias = #{record.usealias,jdbcType=SMALLINT},
      alias = #{record.alias,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.email.entity.Users">
    update users
    <set>
      <if test="pwdhash != null">
        pwdHash = #{pwdhash,jdbcType=VARCHAR},
      </if>
      <if test="pwdalgorithm != null">
        pwdAlgorithm = #{pwdalgorithm,jdbcType=VARCHAR},
      </if>
      <if test="useforwarding != null">
        useForwarding = #{useforwarding,jdbcType=SMALLINT},
      </if>
      <if test="forwarddestination != null">
        forwardDestination = #{forwarddestination,jdbcType=VARCHAR},
      </if>
      <if test="usealias != null">
        useAlias = #{usealias,jdbcType=SMALLINT},
      </if>
      <if test="alias != null">
        alias = #{alias,jdbcType=VARCHAR},
      </if>
    </set>
    where username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.email.entity.Users">
    update users
    set pwdHash = #{pwdhash,jdbcType=VARCHAR},
      pwdAlgorithm = #{pwdalgorithm,jdbcType=VARCHAR},
      useForwarding = #{useforwarding,jdbcType=SMALLINT},
      forwardDestination = #{forwarddestination,jdbcType=VARCHAR},
      useAlias = #{usealias,jdbcType=SMALLINT},
      alias = #{alias,jdbcType=VARCHAR}
    where username = #{username,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.example.email.entity.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>